name: CI

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]

jobs:
  build-and-test:
    name: ${{ matrix.os }} Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        compiler: [msvc, clang] # Test with both MSVC and Clang on Windows
        include:
          - os: ubuntu-latest
            compiler: clang
          - os: macos-latest
            compiler: clang

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1
        with:
          cmake-version: "3.20.0"  # Specify the minimum version you need

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install -y ninja
          if (${{ matrix.compiler }} == 'clang') {
            choco install -y llvm  # Install Clang on Windows if needed
          } else {
            choco install -y visualstudio2022community --package-parameters "--add Microsoft.VisualStudio.Component.VC.Tools.x86.x64"
          }
        shell: pwsh

      - name: Install dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build clang
      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install ninja
          brew install llvm

      - name: Configure CMake
        run: |
          if (runner.os == 'Windows' && ${{ matrix.compiler }} == 'msvc') {
            cmake -S . -B build -G Ninja -A x64 -T host=x64 -DCMAKE_CXX_COMPILER=cl
          } else {
            cmake -S . -B build -G Ninja -DCMAKE_CXX_COMPILER=clang++
          }
      - name: Build
        run: cmake --build build

      - name: Run tests
        run: ctest --test-dir build --output-on-failure
